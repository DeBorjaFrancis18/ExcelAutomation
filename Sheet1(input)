Option Explicit
Private Sub Worksheet_Change(ByVal Destination As Range)
Dim DelimiterType As String
Dim rngDropdown As Range
Dim oldValue As String
Dim newValue As String
DelimiterType = vbCrLf
If Destination.Count > 1 Then Exit Sub

On Error Resume Next
Set rngDropdown = Cells.SpecialCells(xlCellTypeAllValidation)
On Error GoTo exitError

If rngDropdown Is Nothing Then GoTo exitError

If Intersect(Destination, rngDropdown) Is Nothing Then
   'do nothing
Else
  Application.EnableEvents = False
  newValue = Destination.Value
  Application.Undo
  oldValue = Destination.Value
  Destination.Value = newValue
    If oldValue = "" Then
      'do nothing
    Else
      If newValue = "" Then
        'do nothing
      Else
        Destination.Value = oldValue & DelimiterType & newValue
        ' add new value with delimiter
      End If
    End If
End If

exitError:
  Application.EnableEvents = True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub






Sub Generate_Table()

Dim x As String
Dim y As String
Dim z As String
Dim Splitx() As String
Dim Splity() As String
Dim Splitz() As String
Dim uniqueItems As Collection
Dim item As Variant
Dim i As Integer

x = Sheets("Change Request -new").Cells(12, 2).Value
y = Sheets("Change Request -new").Cells(14, 2).Value
z = Sheets("Change Request -new").Cells(16, 2).Value

Message = "x: " & x & vbCrLf & "y: " & y & vbCrLf & "z: " & z
MsgBox Message

Splitx = Split(x, "/")

Set uniqueItems = New Collection

On Error Resume Next
For i = LBound(Splitx) To UBound(Splitx)
    uniqueItems.Add Splitx(i), Splitx(i)
Next i
On Error GoTo 0

For Each item In uniqueItems
    MsgBox item

End Sub
